name: Build App Container Image for Production

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-app:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      ENV_KEY: ${{ secrets.ENV_KEY }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add variable for application
        run: |
          echo "APP_VERSION_HASH=${{ github.sha }}" >> .constants

      - uses: shivammathur/setup-php@v2
        with:
          php-version: "latest"
      - name: Composer Install
        uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader --no-dev"

      - name: Create .env file
        run: |
          if [ -f .env.dev.encrypted ]; then
              php artisan env:decrypt --env=dev --key=${{ env.ENV_KEY }}
              ln -s .env.dev .env
              ls -lah .env*
          fi

          if [ ! -f database/database.sqlite ]; then
              touch database/database.sqlite
              php artisan migrate --graceful --ansi --force --database=sqlite
          fi

      - name: NPM Setup
        uses: bahmutov/npm-install@v1

      - name: NPM Build
        run: npx vite build

      - name: Build Cache
        run: |
          sudo mkdir -p /var/www/vhosts
          sudo ln -s $(pwd) /var/www/vhosts/localhost
          cd /var/www/vhosts/localhost
          pwd && ls -lah
          php artisan migrate --graceful --ansi --force
          php artisan event:cache
          php artisan config:cache

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get & Set Container Metadata
        id: meta-packages
        uses: docker/metadata-action@v5
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Clean Build App
        run: rm -rf node_modules public/debug.php resources/css resources/fonts resources/images resources/js resources/vue stubs tests cypress .git .github .gitlab .gitattributes .gitignore .vscode .editorconfig .env* .styleci.yml .eslintignore .eslintrc.js .phpunit.result.cache .stylelintrc.json package.json package-lock.json pint.json tsconfig.json tsconfig.node.json *.yaml *.md *.lock *.xml *.yml *.ts *.jsyml *.ts *.js *.sh
      - name: Build & Push Container
        uses: docker/build-push-action@v5
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-packages.outputs.tags }}
          labels: ${{ steps.meta-packages.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
